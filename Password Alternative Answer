/*Assume you are framing a security question for a password alternative. Read the security answer from the user. 
Define a function to print the number of consonants, vowels, spaces, words and special characters in the input.
The security answer can contain continuous multiple spaces. Allocate memory for the string to be stored using dynamic memory allocation functions in C.*/

#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <stdlib.h>

int main()
{
    char s[100];
    fgets(s, 100, stdin);
    //s[strlen(s) - 1] = '\0';
    
    char *p = (char *)calloc(strlen(s)+1, sizeof(char));
    for (int i=0; s[i]!='\0'; i++) *(p+i) = *(s + i);
    
    int c=0, v=0, d=0, sc=0, sp=0, w=1;
    for (int i=0; *(p+i)!='\0'; i++)
    {
        char h = tolower(*(p+i));
        if (h=='a' || h=='e' || h=='i' || h=='o' || h=='u') v++;
        else if (isspace(h)) sp++;
        else if (isdigit(h)) d++;
        else if (isalpha(h)) c++;
        else sc++;
    }
    
    for (int i=0; *(p+i+1)!='\0'; i++)
    {
        char h = tolower(*(p+i)), h1 = tolower(*(p+i+1));
        if (isspace(h) && !isspace(h1)) w++;
    }
    
    printf("Consonants: %d\n", c);
    printf("Vowels: %d\n", v);
    printf("Spaces: %d\n", sp);
    printf("Words: %d\n", w);
    printf("Special Characters: %d\n", sc);
    return 0;
}
